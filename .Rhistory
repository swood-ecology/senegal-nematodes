mean <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = mean)
se <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = st.err)
plot <- mean
plot$mean <- mean$x
plot$upper <- mean$x + se$x
plot$lower <- mean$x - se$x
plot <- select(plot, Group.1, Group.2, mean, upper, lower)
names(plot)[1:2] <- c("Treatment","Taxa")
ggplot(plot, aes(x = Taxa, y = mean/100, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower/100, ymax=upper/100), position=position_dodge(width=0.9), width=0.25) +
ylab("Nematode total abundance\n(number per g soil)\n") +
xlab('') + theme_bw() +
scale_fill_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c')) +
theme(
legend.title = element_blank(),
legend.text = element_text(size=13),
axis.title.y = element_text(size = 13),
axis.text.x = element_text(size = 13, angle=45, hjust=1),
axis.text.y = element_text(size = 11)
)
sum <- aggregate(id_all$ra, by = list(id_all$SN, id_all$treatment_2, id_all$Taxons), FUN = sum)
mean <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = mean)
se <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = st.err)
plot <- mean
plot$mean <- mean$x
plot$upper <- mean$x + se$x
plot$lower <- mean$x - se$x
plot <- select(plot, Group.1, Group.2, mean, upper, lower)
names(plot)[1:2] <- c("Treatment","Taxa")
ggplot(plot, aes(x = Taxa, y = mean, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), position=position_dodge(width=0.9), width=0.25) +
ylab("Nematode relative abundance\n(number per g soil)\n") +
xlab('') + theme_bw() +
scale_fill_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c')) +
theme(
legend.title = element_blank(),
legend.text = element_text(size=13),
axis.title.y = element_text(size = 13),
axis.text.x = element_text(size = 13, angle=45, hjust=1),
axis.text.y = element_text(size = 11)
)
ggplot(plot, aes(x = Taxa, y = mean, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), position=position_dodge(width=0.9), width=0.25) +
ylab("Nematode relative abundance\n(%)\n") +
xlab('') + theme_bw() +
scale_fill_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c')) +
theme(
legend.title = element_blank(),
legend.text = element_text(size=13),
axis.title.y = element_text(size = 13),
axis.text.x = element_text(size = 13, angle=45, hjust=1),
axis.text.y = element_text(size = 11)
)
#### LOAD PACKAGES ####
library(tidyverse)
library(readxl)
library(lme4)
#### DEFINE CUSTOM FUNCTIONS ####
st.err <- function(x) {
sd(x)/sqrt(length(x))
}
#### READ IN DATA ####
site_id <- read_excel("sn_nematodes.xls", sheet = "site_id")
taxa_id <- read_excel("sn_nematodes.xls", sheet = "taxa_id")
id <- read_excel("sn_nematodes.xls", sheet = "identification")
#### MANIPULATE DATA ####
taxa_id$troph_guild <- paste(taxa_id$Group, taxa_id$`life-history-degree`)
joined <- full_join(id, taxa_id) %>%
gather(var, val, 2:ncol(id)) %>%
filter(is.na(val)!=TRUE)
join_groups <- aggregate(joined$val, by=list(joined$troph_guild, joined$var), FUN=sum) %>%
spread(Group.1,x)
names(join_groups)[1] <- 'SN'
join_groups$c.p1 <- join_groups$`Bacteriovore 1`
join_groups$c.p2 <- join_groups$`Bacteriovore 2`+join_groups$`Fungivore 2`
join_groups$c.p3 <- join_groups$`Bacteriovore 3`
join_groups$c.p4 <- join_groups$`Bacteriovore 4`+join_groups$`Fungivore 4`+join_groups$`Carnivore 4`+join_groups$`Omnivore 4`
join_groups$c.p5 <- join_groups$`Carnivore 5`+join_groups$`Omnivore 5`
join_groups$total_free <- join_groups$`Bacteriovore 1`+join_groups$`Bacteriovore 2`+join_groups$`Bacteriovore 3`+join_groups$`Bacteriovore 4`+join_groups$`Fungivore 2`+join_groups$`Fungivore 4`+join_groups$`Omnivore 4`+join_groups$`Omnivore 5`+join_groups$`Carnivore 4`+join_groups$`Carnivore 5`
join_groups$Cp1 <- join_groups$c.p1/join_groups$total_free
join_groups$Cp2 <- join_groups$c.p2/join_groups$total_free
join_groups$Cp3 <- join_groups$c.p3/join_groups$total_free
join_groups$Cp4 <- join_groups$c.p4/join_groups$total_free
join_groups$Cp5 <- join_groups$c.p5/join_groups$total_free
head(join_groups)
full_join(join_groups, site_id)
is(join_groups$SN)
is(site_id$SN)
join_groups$SN <- as.numeric(join_groups$SN)
full_join(join_groups, site_id)
help(select)
full_join(join_groups, site_id) %>% select(c.p1:Input_level)
full_join(join_groups, site_id) %>% select(c.p1:Input_level) %>% spread()
full_join(join_groups, site_id) %>% select(c.p1:Input_level) %>% spread(SOL)
full_join(join_groups, site_id) %>% select(c.p1:Input_level) %>% spread('SOL')
full_join(join_groups, site_id) %>% select(c.p1:Input_level) %>% gather(c.p1:Cp5)
full_join(join_groups, site_id) %>% select(c.p1:Input_level) %>% gather(Lieu, Bloc, SOL, Modalité, Treatment_1, Treatment_2, Input_level, c.p1:Cp5)
full_join(join_groups, site_id) %>% select(c.p1:Input_level) %>% gather(SN, Lieu, Bloc, SOL, Modalité, Treatment_1, Treatment_2, Input_level, c.p1:Cp5)
full_join(join_groups, site_id) %>% select(c.p1:Input_level) %>% gather(SN, c.p1:Cp5)
full_join(join_groups, site_id) %>% select(c.p1:Input_level)
full_join(join_groups, site_id) %>% select(SN, c.p1:c.p5,Cp1:Input_level)
full_join(join_groups, site_id) %>% select(SN, c.p1:c.p5,Cp1:Input_level) %>% gather(SN, c.p1:Cp5)
help(gather)
full_join(join_groups, site_id) %>% select(SN, c.p1:c.p5,Cp1:Input_level) %>% gather()
full_join(join_groups, site_id) %>% select(SN, c.p1:c.p5,Cp1:Input_level) %>% gather(c.p1:Cp5)
full_join(join_groups, site_id) %>% select(SN, c.p1:c.p5,Cp1:Input_level)
full_join(join_groups, site_id) %>% select(SN, c.p1:c.p5,Cp1:Input_level) %>% gather(type, value, c.p1:Cp5)
full_join(join_groups, site_id) %>% select(SN, c.p1:c.p5,Cp1:Input_level) %>% gather(type, value, c.p1:Cp5) %>% filter(is.na(Input_level) == TRUE)
full_join(join_groups, site_id) %>% select(SN, c.p1:c.p5,Cp1:Input_level) %>% gather(type, value, c.p1:Cp5) %>% filter(is.na(Input_level) == TRUE) %>% select(-Input_level)
paths <- full_join(join_groups, site_id) %>%
select(SN, c.p1:c.p5,Cp1:Input_level) %>%
gather(type, value, c.p1:Cp5) %>%
filter(is.na(Input_level) == TRUE) %>%
select(-Input_level)
#### VISUALIZE DATA ####
sum <- aggregate(paths$value, by = list(id_all$SN, id_all$treatment_2, id_all$type), FUN = sum)
#### VISUALIZE DATA ####
sum <- aggregate(paths$value, by = list(paths$SN, paths$treatment_2, paths$type), FUN = sum)
paths <- full_join(join_groups, site_id) %>%
select(SN, c.p1:c.p5,Cp1:Input_level) %>%
gather(type, value, c.p1:Cp5) %>%
filter(is.na(Input_level) == TRUE) %>%
select(-Input_level)
paths
#### VISUALIZE DATA ####
sum <- aggregate(paths$value, by = list(paths$SN, paths$Treatment_2, paths$type), FUN = sum)
mean <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = mean)
se <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = st.err)
plot <- mean
plot$mean <- mean$x
plot$upper <- mean$x + se$x
plot$lower <- mean$x - se$x
plot <- select(plot, Group.1, Group.2, mean, upper, lower)
names(plot)[1:2] <- c("Treatment","Type")
ggplot(plot, aes(x = Type, y = mean, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), position=position_dodge(width=0.9), width=0.25) +
ylab("Nematode relative abundance\n(%)\n") +
xlab('') + theme_bw() +
scale_fill_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c')) +
theme(
legend.title = element_blank(),
legend.text = element_text(size=13),
axis.title.y = element_text(size = 13),
axis.text.x = element_text(size = 13, angle=45, hjust=1),
axis.text.y = element_text(size = 11)
)
plot
sum
names(paths)
#### VISUALIZE DATA ####
sum <- aggregate(paths$value, by = list(paths$Lieu, paths$Treatment_2, paths$type), FUN = sum)
mean <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = mean)
mean
mean <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = mean, na.rm=T)
se <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = st.err,na.rm=T)
se
#### DEFINE CUSTOM FUNCTIONS ####
st.err <- function(x) {
sd(x,na.rm=T)/sqrt(length(x))
}
se <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = st.err)
se
#### DEFINE CUSTOM FUNCTIONS ####
st.err <- function(x) {
sd(x,na.rm=T)/sqrt(length(x),na.rm=T)
}
se <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = st.err)
se
#### DEFINE CUSTOM FUNCTIONS ####
st.err <- function(x) {
sd(x,na.rm=T)/sqrt(length(x,na.rm=T))
}
se <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = st.err)
#### DEFINE CUSTOM FUNCTIONS ####
st.err <- function(x) {
sd(x,na.rm=T)/sqrt(length(x[!is.na(x)]))
}
se <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = st.err)
se
sum$x
#### VISUALIZE DATA ####
sum <- aggregate(paths$value, by = list(paths$Lieu, paths$Treatment_2, paths$type), FUN = sum)
sum
#### VISUALIZE DATA ####
sum <- aggregate(paths$value, by = list(paths$SN, paths$Treatment_2, paths$type), FUN = sum)
sum
mean <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = mean, na.rm=T)
mean
se <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = st.err)
se
plot <- mean
plot$mean <- mean$x
plot$upper <- mean$x + se$x
plot$lower <- mean$x - se$x
plot <- select(plot, Group.1, Group.2, mean, upper, lower)
names(plot)[1:2] <- c("Treatment","Type")
ggplot(plot, aes(x = Type, y = mean, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), position=position_dodge(width=0.9), width=0.25) +
ylab("Nematode relative abundance\n(%)\n") +
xlab('') + theme_bw() +
scale_fill_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c')) +
theme(
legend.title = element_blank(),
legend.text = element_text(size=13),
axis.title.y = element_text(size = 13),
axis.text.x = element_text(size = 13, angle=45, hjust=1),
axis.text.y = element_text(size = 11)
)
full_join(join_groups, site_id)
paths <- full_join(join_groups, site_id) %>%
select(SN, c.p1:c.p5,Lieu:Input_level) %>%
gather(type, value, c.p1:c.p5) %>%
filter(is.na(Input_level) == TRUE) %>%
select(-Input_level)
paths
#### VISUALIZE DATA ####
sum <- aggregate(paths$value, by = list(paths$SN, paths$Treatment_2, paths$type), FUN = sum)
mean <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = mean, na.rm=T)
se <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = st.err)
plot <- mean
plot$mean <- mean$x
plot$upper <- mean$x + se$x
plot$lower <- mean$x - se$x
plot <- select(plot, Group.1, Group.2, mean, upper, lower)
names(plot)[1:2] <- c("Treatment","Type")
ggplot(plot, aes(x = Type, y = mean, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), position=position_dodge(width=0.9), width=0.25) +
ylab("Nematode relative abundance\n(%)\n") +
xlab('') + theme_bw() +
scale_fill_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c')) +
theme(
legend.title = element_blank(),
legend.text = element_text(size=13),
axis.title.y = element_text(size = 13),
axis.text.x = element_text(size = 13, angle=45, hjust=1),
axis.text.y = element_text(size = 11)
)
ggplot(plot, aes(x = Type, y = mean, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), position=position_dodge(width=0.9), width=0.25) +
ylab("Plant pathogen group abundance\n(number per g soil)\n") +
xlab('') + theme_bw() +
scale_fill_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c')) +
theme(
legend.title = element_blank(),
legend.text = element_text(size=13),
axis.title.y = element_text(size = 13),
axis.text.x = element_text(size = 13, angle=45, hjust=1),
axis.text.y = element_text(size = 11)
)
#### DEFINE CUSTOM FUNCTIONS ####
st.err <- function(x) {
sd(x,na.rm=T)/sqrt(length(x[!is.na(x)]))
}
#### READ IN DATA ####
site_id <- read_excel("sn_nematodes.xls", sheet = "site_id")
taxa_id <- read_excel("sn_nematodes.xls", sheet = "taxa_id")
id <- read_excel("sn_nematodes.xls", sheet = "identification")
#### MANIPULATE DATA ####
id_trans <- id %>%
gather(var, val, 2:ncol(id)) %>%
spread(Taxons, val) %>%
select(-c(TOTAL,Actinolaimus))
names(id_trans)[1] <- 'SN'
id_trans$SN <- as.numeric(id_trans$SN)
# Join database with site information level
id_merge <- full_join(id_trans, site_id) %>% select(SN:Lieu, SOL:Input_level)
names(id_merge)[51:56] <- c('site','soil','treatment','treatment_1','treatment_2','input_level')
rm(id_trans)
# Drop observations with double addition because of lack of replication
id_merge <- filter(id_merge, is.na(input_level) == TRUE)
# Convert from wide to long
id_merge_long <- gather(id_merge, var, val, Achromodora:Zeldia)
rm(id_merge)
# Relevel factors for analysis
id_merge_long$soil <- factor(id_merge_long$soil, levels=c('Bulk Soil', 'Rhizosphere'))
# Add in taxonomic functional groupings and remove NA values
names(id_merge_long)[8] <- 'Taxons'
id_all <- filter(id_merge_long, is.na(val) != TRUE)
rm(id_merge_long)
# Add total abundance variable per plot level
agg <- aggregate(id_all$val, by=list(id_all$site,id_all$soil,id_all$treatment),FUN=sum)
names(agg) <- c('site','soil','treatment','total_abun')
id_all <- full_join(id_all,agg)
rm(agg)
# Subset top taxa
id_all$ra <- id_all$val / id_all$total_abun
test <- aggregate(id_all$ra, by = list(id_all$Taxons), FUN = mean)
test <- aggregate(id_all$val, by = list(id_all$Taxons), FUN = mean)
test[order(test$x),]
taxa <- c('Rotylenchulus','Aphelenchus','Tylenchidea','Acrobeloides','Meloidogyne','Ditylenchus','Tylenchorynchus',
'Acrobeles','Prodorylaimus','Zeldia','Cephalobus','Chiloplacus')
id_all <- id_all[which(id_all$Taxons %in% taxa),]
rm(test, taxa)
#### VISUALIZE DATA ####
sum <- aggregate(id_all$val, by = list(id_all$SN, id_all$soil, id_all$Taxons), FUN = sum)
mean <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = mean)
se <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = st.err)
plot <- mean
plot$mean <- mean$x
plot$upper <- mean$x + se$x
plot$lower <- mean$x - se$x
plot <- select(plot, Group.1, Group.2, mean, upper, lower)
names(plot)[1:2] <- c("soil","Taxa")
ggplot(plot, aes(x = Taxa, y = mean/100, fill=soil)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower/100, ymax=upper/100), position=position_dodge(width=0.9), width=0.25) +
ylab("Nematode total abundance\n(number per g soil)\n") +
xlab('') + theme_bw() +
scale_fill_manual(values=c('#1b9e77','#d95f02')) +
theme(
legend.title = element_blank(),
legend.text = element_text(size=13),
axis.title.y = element_text(size = 13),
axis.text.x = element_text(size = 13, angle=45, hjust=1),
axis.text.y = element_text(size = 11)
)
#### READ IN DATA ####
site_id <- read_excel("sn_nematodes.xls", sheet = "site_id")
taxa_id <- read_excel("sn_nematodes.xls", sheet = "taxa_id")
id <- read_excel("sn_nematodes.xls", sheet = "identification")
#### MANIPULATE DATA ####
taxa_id$troph_guild <- paste(taxa_id$Group, taxa_id$`life-history-degree`)
joined <- full_join(id, taxa_id) %>%
gather(var, val, 2:ncol(id)) %>%
filter(is.na(val)!=TRUE)
join_groups <- aggregate(joined$val, by=list(joined$troph_guild, joined$var), FUN=sum) %>%
spread(Group.1,x)
names(join_groups)[1] <- 'SN'
join_groups$c.p1 <- join_groups$`Bacteriovore 1`
join_groups$c.p2 <- join_groups$`Bacteriovore 2`+join_groups$`Fungivore 2`
join_groups$c.p3 <- join_groups$`Bacteriovore 3`
join_groups$c.p4 <- join_groups$`Bacteriovore 4`+join_groups$`Fungivore 4`+join_groups$`Carnivore 4`+join_groups$`Omnivore 4`
join_groups$c.p5 <- join_groups$`Carnivore 5`+join_groups$`Omnivore 5`
join_groups$total_free <- join_groups$`Bacteriovore 1`+join_groups$`Bacteriovore 2`+join_groups$`Bacteriovore 3`+join_groups$`Bacteriovore 4`+join_groups$`Fungivore 2`+join_groups$`Fungivore 4`+join_groups$`Omnivore 4`+join_groups$`Omnivore 5`+join_groups$`Carnivore 4`+join_groups$`Carnivore 5`
join_groups$Cp1 <- join_groups$c.p1/join_groups$total_free
join_groups$Cp2 <- join_groups$c.p2/join_groups$total_free
join_groups$Cp3 <- join_groups$c.p3/join_groups$total_free
join_groups$Cp4 <- join_groups$c.p4/join_groups$total_free
join_groups$Cp5 <- join_groups$c.p5/join_groups$total_free
join_groups$SN <- as.numeric(join_groups$SN)
paths <- full_join(join_groups, site_id) %>%
select(SN, c.p1:c.p5,Lieu:Input_level) %>%
gather(type, value, c.p1:c.p5) %>%
filter(is.na(Input_level) == TRUE) %>%
select(-Input_level)
#### VISUALIZE DATA ####
sum <- aggregate(paths$value, by = list(paths$SN, paths$Treatment_2, paths$type), FUN = sum)
mean <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = mean, na.rm=T)
se <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = st.err)
plot <- mean
plot$mean <- mean$x
plot$upper <- mean$x + se$x
plot$lower <- mean$x - se$x
plot <- select(plot, Group.1, Group.2, mean, upper, lower)
names(plot)[1:2] <- c("Treatment","Type")
ggplot(plot, aes(x = Type, y = mean, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), position=position_dodge(width=0.9), width=0.25) +
ylab("Plant pathogen group abundance\n(number per g soil)\n") +
xlab('') + theme_bw() +
scale_fill_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c')) +
theme(
legend.title = element_blank(),
legend.text = element_text(size=13),
axis.title.y = element_text(size = 13),
axis.text.x = element_text(size = 13, angle=45, hjust=1),
axis.text.y = element_text(size = 11)
)
names(paths)
paths
#### VISUALIZE DATA ####
sum <- aggregate(paths$value, by = list(paths$SN, paths$SOL, paths$type), FUN = sum)
mean <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = mean, na.rm=T)
se <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = st.err)
plot <- mean
plot$mean <- mean$x
plot$upper <- mean$x + se$x
plot$lower <- mean$x - se$x
plot <- select(plot, Group.1, Group.2, mean, upper, lower)
names(plot)[1:2] <- c("Treatment","Type")
ggplot(plot, aes(x = Type, y = mean, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), position=position_dodge(width=0.9), width=0.25) +
ylab("Plant pathogen group abundance\n(number per g soil)\n") +
xlab('') + theme_bw() +
scale_fill_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c')) +
theme(
legend.title = element_blank(),
legend.text = element_text(size=13),
axis.title.y = element_text(size = 13),
axis.text.x = element_text(size = 13, angle=45, hjust=1),
axis.text.y = element_text(size = 11)
)
ggplot(plot, aes(x = Type, y = mean, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), position=position_dodge(width=0.9), width=0.25) +
ylab("Plant pathogen group abundance\n(number per g soil)\n") +
xlab('') + theme_bw() +
scale_fill_manual(values=c('#1b9e77','#d95f02')) +
theme(
legend.title = element_blank(),
legend.text = element_text(size=13),
axis.title.y = element_text(size = 13),
axis.text.x = element_text(size = 13, angle=45, hjust=1),
axis.text.y = element_text(size = 11)
)
sum <- aggregate(paths$value, by = list(paths$SN, paths$Treatment_2, paths$type), FUN = sum)
mean <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = mean, na.rm=T)
se <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = st.err)
plot <- mean
plot$mean <- mean$x
plot$upper <- mean$x + se$x
plot$lower <- mean$x - se$x
plot <- select(plot, Group.1, Group.2, mean, upper, lower)
names(plot)[1:2] <- c("Treatment","Type")
ggplot(plot, aes(x = Type, y = mean, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), position=position_dodge(width=0.9), width=0.25) +
ylab("Plant pathogen group abundance\n(number per g soil)\n") +
xlab('') + theme_bw() +
scale_fill_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c')) +
theme(
legend.title = element_blank(),
legend.text = element_text(size=13),
axis.title.y = element_text(size = 13),
axis.text.x = element_text(size = 13, angle=45, hjust=1),
axis.text.y = element_text(size = 11)
)
#### LOAD PACKAGES ####
library(tidyverse)
library(readxl)
library(lme4)
#### DEFINE CUSTOM FUNCTIONS ####
st.err <- function(x) {
sd(x)/sqrt(length(x))
}
#### READ IN DATA ####
site_id <- read_excel("sn_nematodes.xls", sheet = "site_id")
taxa_id <- read_excel("sn_nematodes.xls", sheet = "taxa_id")
id <- read_excel("sn_nematodes.xls", sheet = "identification")
#### MANIPULATE DATA ####
id_trans <- id %>%
gather(var, val, 2:ncol(id)) %>%
spread(Taxons, val) %>%
select(-c(TOTAL,Actinolaimus))
names(id_trans)[1] <- 'SN'
id_trans$SN <- as.numeric(id_trans$SN)
# Join database with site information level
id_merge <- full_join(id_trans, site_id) %>% select(SN:Lieu, SOL:Input_level)
names(id_merge)[51:56] <- c('site','soil','treatment','treatment_1','treatment_2','input_level')
# Drop observations with double addition because of lack of replication
# Drop observations with 'procep' taxon because of lack of functional classification
id_merge <- filter(id_merge, is.na(input_level) == TRUE) %>% select(-c(input_level, procep))
# Convert from wide to long
id_merge_long <- gather(id_merge, var, val, Achromodora:Zeldia)
# Relevel factors for analysis
id_merge_long$soil <- factor(id_merge_long$soil, levels=c('Bulk Soil', 'Rhizosphere'))
# Add in taxonomic functional groupings and remove NA values
names(id_merge_long)[7] <- 'Taxons'
id_all <- full_join(id_merge_long, taxa_id) %>% filter(is.na(val) != TRUE)
#### VISUALIZE DATA ####
sum <- aggregate(id_all$val, by = list(id_all$SN, id_all$soil, id_all$Group), FUN = sum)
mean <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = mean)
se <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = st.err)
plot <- mean
plot$mean <- mean$x
plot$upper <- mean$x + se$x
plot$lower <- mean$x - se$x
plot <- select(plot, Group.1, Group.2, mean, upper, lower)
names(plot)[1:2] <- c("soil","Group")
ggplot(plot, aes(x = Group, y = mean/100, fill=soil)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower/100, ymax=upper/100), position=position_dodge(width=0.9), width=0.25) +
ylab("Nematode abundance\n(number per g soil)\n") +
xlab('') + theme_bw() +
scale_fill_manual(values=c('#1b9e77','#d95f02')) +
theme(
legend.title = element_blank(),
legend.text = element_text(size=13),
axis.title.y = element_text(size = 13),
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 11)
)
sum <- aggregate(id_all$val, by = list(id_all$SN, id_all$treatment_2, id_all$Group), FUN = sum)
mean <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = mean)
se <- aggregate(sum$x, by = list(sum$Group.2, sum$Group.3), FUN = st.err)
plot <- mean
plot$mean <- mean$x
plot$upper <- mean$x + se$x
plot$lower <- mean$x - se$x
plot <- select(plot, Group.1, Group.2, mean, upper, lower)
names(plot)[1:2] <- c("Treatment","Group")
ggplot(plot, aes(x = Group, y = mean/100, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower/100, ymax=upper/100), position=position_dodge(width=0.9), width=0.25) +
ylab("Nematode abundance\n(number per g soil)\n") +
xlab('') + theme_bw() +
scale_fill_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c')) +
theme(
legend.title = element_blank(),
legend.text = element_text(size=13),
axis.title.y = element_text(size = 13),
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 11)
)
